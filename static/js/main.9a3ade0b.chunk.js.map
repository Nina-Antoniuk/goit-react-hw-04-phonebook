{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Form/Form.js","components/Filter/Filter.js","components/ContactsListElement/ContactsListElement.js","components/Contacts/Contacts.js","App.js","index.js","components/ContactsListElement/ContactsListElement.module.css","components/Form/Form.module.css"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","inputChange","e","target","value","console","log","reset","className","s","form","preventDefault","htmlFor","id","type","pattern","title","required","autoComplete","onChange","button","Filter","ContactsListElement","onClick","listItem","deleteBtn","PropTypes","names","arrayOf","object","func","Contacts","list","map","el","App","contacts","setContacts","searchValue","setSearchValue","useEffect","localStorage","getItem","listOfContacts","JSON","parse","setItem","stringify","obj","find","contact","alert","uuidv1","filterValue","toLocaleLowerCase","filter","toLowerCase","includes","parentNode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a3ade0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__l3FS6\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('oops');\n    }\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={submit}>\n      <label className=\"label\" htmlFor=\"nameId\">\n        Name\n      </label>\n      <input\n        id=\"nameId\"\n        className=\"input\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n          Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        autoComplete=\"off\"\n        value={name}\n        onChange={inputChange}\n      />\n      <label className=\"label\" htmlFor=\"numberId\">\n        Number\n      </label>\n      <input\n        id=\"numberId\"\n        className=\"input\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, \n          круглые скобки и может начинаться с +\"\n        required\n        autoComplete=\"off\"\n        value={number}\n        onChange={inputChange}\n      />\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\n\nfunction Filter({ id, value, onChange }) {\n  return (\n    <>\n      <label className=\"label\" htmlFor={id}>\n        Find contacts by name\n      </label>\n\n      <input\n        id={id}\n        className=\"input\"\n        name=\"filter\"\n        type=\"text\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Введите имя которое ищите\"\n        autoComplete=\"off\"\n        value={value}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactsListElement.module.css';\n\nfunction ContactsListElement({ id, name, number, onClick }) {\n  return (\n    <li className={s.listItem} id={id}>\n      <span className={s.name}>{name}:</span> {number}\n      <button className={s.deleteBtn} type=\"button\" onClick={onClick}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactsListElement.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default ContactsListElement;\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\nimport ContactsListElement from '../ContactsListElement';\n\nfunction Contacts({ names, onClick }) {\n  return (\n    <ul className={s.list}>\n      {names().map(el => {\n        return (\n          <ContactsListElement\n            key={el.id}\n            id={el.id}\n            name={el.name}\n            number={el.number}\n            onClick={onClick}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nContactsListElement.PropTypes = {\n  names: PropTypes.arrayOf(PropTypes.object),\n  onClick: PropTypes.func,\n};\n\nexport default Contacts;\n","import { useState, useEffect } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\nimport './App.css';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport Contacts from './components/Contacts';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => {\n    if (localStorage.getItem('contacts')) {\n      const listOfContacts = JSON.parse(localStorage.getItem('contacts'));\n      setContacts(listOfContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const inputChange = e => {\n    setSearchValue(e.target.value);\n  };\n\n  const submit = obj => {\n    const existingContact = contacts.find(contact => {\n      return contact.name === obj.name;\n    });\n\n    if (existingContact) {\n      return alert(`${obj.name} is already in contacts`);\n    }\n\n    setContacts([\n      {\n        id: uuidv1(),\n        ...obj,\n      },\n      ...contacts,\n    ]);\n  };\n\n  const contactsFiltering = () => {\n    const filterValue = searchValue.toLocaleLowerCase();\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filterValue);\n    });\n  };\n\n  const deleteContact = e => {\n    return setContacts(() => {\n      return contacts.filter(contact => {\n        return contact.id !== e.target.parentNode.id;\n      });\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <h2>Phonebook</h2>\n        <Form onSubmit={submit} />\n      </div>\n      <div className=\"wrapper\">\n        <h2>Contacts</h2>\n        <Filter id={uuidv1()} value={searchValue} onChange={inputChange} />\n        <Contacts names={contactsFiltering} onClick={deleteContact} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactsListElement_listItem__b2IoV\",\"name\":\"ContactsListElement_name__3q31J\",\"deleteBtn\":\"ContactsListElement_deleteBtn__26xTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__WS4Pn\",\"button\":\"Form_button__3GWyu\",\"input\":\"Form_input__3qZpx\",\"deleteBtn\":\"Form_deleteBtn__GQuPp\"};"],"sourceRoot":""}